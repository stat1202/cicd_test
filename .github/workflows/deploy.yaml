name: Build-Front
on:
  push:
    branches:
      - main #빌드하고싶은 브랜치
    paths:
      - front/**
jobs:
  check-changes:
    runs-on: ubuntu-latest
    outputs:
      front: ${{ steps.set-output.outputs.front }}
      back: ${{ steps.set-output.outputs.back }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - name: Get list of changed files
        id: get-changed-files
        run: |
          changed_files=$(git diff --name-only HEAD~1 HEAD)
          echo "Changed files: $changed_files"
      - name: Check changes in front or back
        id: set-output
        run: |
          changed_files=$(git diff --name-only HEAD~1 HEAD)
          front="false"
          back="false"
          for file in $changed_files
          do
            if [[ "$file" == front/* ]]; then
              front="true"
            fi
            if [[ "$file" == back/* ]]; then
              back="true"
            fi
          done
          echo "Front changed: $front"
          echo "Back changed: $back"
          echo "::set-output name=front::$front"
          echo "::set-output name=back::$back"
  build-front:
    needs: check-changes
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/heads/main') && needs.check-changes.outputs.front == 'true'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - uses: actions/checkout@master
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Npm Install
        working-directory: front
        run: |
          npm install
      - name: Npm Build
        working-directory: front
        run: |
          npm run build
      - name: Upload /build to S3
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --delete
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_STAGING_BUCKET_NAME }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          SOURCE_DIR: "front/dist"
  build-back:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/heads/main') && needs.check-changes.outputs.back == 'true'
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "corretto"

      - name: Create application.properties
        run: |
          echo "${{ secrets.APPLICATION }}" > ./back/src/main/resources/application.properties

      - name: Grant execute permission for gradlew
        run: chmod +x ./back/gradlew

      - name: Build without Test in Gradle
        run: ./gradlew build -x test
        working-directory: ./back
